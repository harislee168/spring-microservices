version: '3'
services:
  rabbitmq:
    image: rabbitmq:3.11.0
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"

  zipkin:
    image: openzipkin/zipkin
    container_name: zipkin
    ports:
      - "9411:9411"

  zookeeper:
    image: confluentinc/cp-zookeeper:7.0.1
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  broker:
    image: confluentinc/cp-kafka:7.0.1
    container_name: broker
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT, PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092, PLAINTEXT_INTERNAL://broker:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1

  mysql-inventory:
    container_name: mysql-inventory
    image: mysql
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: inventoryservices
    volumes:
      - ./mysql-inventory:/var/lib/mysql
    ports:
      - "3307:3306"
    restart: unless-stopped

  mysql-product:
    container_name: mysql-product
    image: mysql
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: productservices
    volumes:
      - ./mysql-product:/var/lib/mysql
    ports:
      - "3308:3306"
    restart: unless-stopped

  mysql-order:
    container_name: mysql-order
    image: mysql
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: orderservices
    volumes:
      - ./mysql-order:/var/lib/mysql
    ports:
      - "3309:3306"
    restart: unless-stopped

  discovery-server:
    image: harislukman/discovery-server:latest
    container_name: discovery-server
    pull_policy: always
    ports:
      - "8761:8761"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      - zipkin

  config-server:
    image: harislukman/config-server:latest
    container_name: config-server
    pull_policy: always
    ports:
      - "8888:8888"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      - discovery-server

  api-gateway:
    image: harislukman/api-gateway:latest
    container_name: api-gateway
    pull_policy: always
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    ports:
      - "8080:8080"
    depends_on:
      - zipkin
      - config-server
      - discovery-server

  inventory-service:
    image: harislukman/inventory-services:latest
    container_name: inventory-service
    pull_policy: always
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      - zipkin
      - mysql-inventory
      - config-server
      - discovery-server

  product-service:
    image: harislukman/product-services:latest
    container_name: product-service
    pull_policy: always
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      - zipkin
      - mysql-product
      - config-server
      - discovery-server

  order-service:
    image: harislukman/order-services:latest
    container_name: order-service
    pull_policy: always
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      - zipkin
      - mysql-order
      - config-server
      - discovery-server
      - broker

  notification-service:
    image: harislukman/notification-services:latest
    container_name: notification-service
    pull_policy: always
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      - config-server
      - discovery-server
      - broker
