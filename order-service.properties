# Mysql setting
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.url=jdbc:mysql://localhost:3306/orderservices
spring.datasource.username=root
spring.datasource.password=test1234!

spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect
spring.jpa.hibernate.ddl-auto=update

server.port=0

# Eureka client setting
eureka.client.serviceUrl.defaultZone=http://localhost:8761/eureka/


#Spring actuator
management.health.circuitbreakers.enabled=true
management.endpoints.web.exposure.include=*
management.endpoint.health.show-details=always

#Resilience4J Circuit Breaker
inventory.serviceName=inventory
resilience4j.circuitbreaker.instances.inventory.registerHealthIndicator=true
resilience4j.circuitbreaker.instances.inventory.minimumNumberOfCalls=5
resilience4J.circuitbreaker.instances.inventory.slidingWindowType=COUNT_BASED
resilience4J.circuitbreaker.instances.inventory.slidingWindowSize=5
resilience4J.circuitbreaker.instances.inventory.failureRateThreshold=50
resilience4J.circuitbreaker.instances.inventory.waitDurationInOpenState=5s
resilience4J.circuitbreaker.instances.inventory.automaticTransitionFromOpenToHalfOpenEnabled=true
resilience4J.circuitbreaker.instances.inventory.permittedNumberOfCallsInHalfOpenState=2

#rabbit mq
spring.rabbitmq.host:localhost
spring.rabbitmq.port=5672
spring.rabbitmq.username=guest
spring.rabbitmq.password=guest

management.tracing.sampling.probability=1.0
logging.pattern.level=%5p [${spring.application.name:},%X{traceId:-},%X{spanId:-}]

#kafka configuration
spring.kafka.bootstrap-servers=localhost:9092
spring.kafka.orderTopicName= orderTopic
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
spring.kafka.producer.properties.spring.json.type.mapping=orderMessage:com.microservice.example.orderservices.dto.TorderDto

spring.testmessage=This is order service message back to normal3